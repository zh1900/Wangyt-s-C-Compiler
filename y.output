Terminals which are not used

   CONSTANT
   STRING_LITERAL
   SIZEOF
   TYPE_NAME
   PTR_OP
   '?'


Grammar

    0 $accept: Program $end

    1 Program: translation_unit

    2 primary_expression: IDENTIFIER
    3                   | TRUE
    4                   | FALSE
    5                   | CONSTANT_INT
    6                   | CONSTANT_DOUBLE
    7                   | '(' expression ')'

    8 postfix_expression: primary_expression
    9                   | postfix_expression '[' expression ']'
   10                   | postfix_expression '(' ')'
   11                   | postfix_expression '(' argument_expression_list ')'
   12                   | postfix_expression INC_OP
   13                   | postfix_expression DEC_OP

   14 argument_expression_list: assignment_expression
   15                         | argument_expression_list ',' assignment_expression

   16 unary_expression: postfix_expression
   17                 | INC_OP unary_expression
   18                 | DEC_OP unary_expression
   19                 | unary_operator unary_expression

   20 unary_operator: '+'
   21               | '-'
   22               | '~'
   23               | '!'

   24 multiplicative_expression: unary_expression
   25                          | multiplicative_expression '*' unary_expression
   26                          | multiplicative_expression '/' unary_expression
   27                          | multiplicative_expression '%' unary_expression

   28 additive_expression: multiplicative_expression
   29                    | additive_expression '+' multiplicative_expression
   30                    | additive_expression '-' multiplicative_expression

   31 shift_expression: additive_expression
   32                 | shift_expression LEFT_OP additive_expression
   33                 | shift_expression RIGHT_OP additive_expression

   34 relational_expression: shift_expression
   35                      | relational_expression '<' shift_expression
   36                      | relational_expression '>' shift_expression
   37                      | relational_expression LE_OP shift_expression
   38                      | relational_expression GE_OP shift_expression

   39 equality_expression: relational_expression
   40                    | equality_expression EQ_OP relational_expression
   41                    | equality_expression NE_OP relational_expression

   42 and_expression: equality_expression
   43               | and_expression '&' equality_expression

   44 exclusive_or_expression: and_expression
   45                        | exclusive_or_expression '^' and_expression

   46 inclusive_or_expression: exclusive_or_expression
   47                        | inclusive_or_expression '|' exclusive_or_expression

   48 logical_and_expression: inclusive_or_expression
   49                       | logical_and_expression AND_OP inclusive_or_expression

   50 logical_or_expression: logical_and_expression
   51                      | logical_or_expression OR_OP logical_and_expression

   52 assignment_expression: logical_or_expression
   53                      | unary_expression assignment_operator assignment_expression

   54 assignment_operator: '='
   55                    | MUL_ASSIGN
   56                    | DIV_ASSIGN
   57                    | MOD_ASSIGN
   58                    | ADD_ASSIGN
   59                    | SUB_ASSIGN
   60                    | LEFT_ASSIGN
   61                    | RIGHT_ASSIGN
   62                    | AND_ASSIGN
   63                    | XOR_ASSIGN
   64                    | OR_ASSIGN

   65 expression: assignment_expression
   66           | expression ',' assignment_expression

   67 declaration: type_specifier ';'
   68            | type_specifier init_declarator_list ';'

   69 init_declarator_list: init_declarator
   70                     | init_declarator_list ',' init_declarator

   71 init_declarator: declarator
   72                | declarator '=' initializer

   73 type_specifier: VOID
   74               | CHAR
   75               | INT
   76               | DOUBLE
   77               | BOOL

   78 declarator: IDENTIFIER
   79           | '(' declarator ')'
   80           | declarator '[' assignment_expression ']'
   81           | declarator '[' '*' ']'
   82           | declarator '[' ']'
   83           | declarator '(' parameter_list ')'
   84           | declarator '(' identifier_list ')'
   85           | declarator '(' ')'

   86 parameter_list: parameter_declaration
   87               | parameter_list ',' parameter_declaration

   88 parameter_declaration: type_specifier declarator
   89                      | type_specifier

   90 identifier_list: IDENTIFIER
   91                | identifier_list ',' IDENTIFIER

   92 initializer: assignment_expression
   93            | '{' initializer_list '}'
   94            | '{' initializer_list ',' '}'

   95 initializer_list: initializer
   96                 | designation initializer
   97                 | initializer_list ',' initializer
   98                 | initializer_list ',' designation initializer

   99 designation: designator_list '='

  100 designator_list: designator
  101                | designator_list designator

  102 designator: '[' logical_or_expression ']'
  103           | '.' IDENTIFIER

  104 statement: labeled_statement
  105          | compound_statement
  106          | expression_statement
  107          | selection_statement
  108          | iteration_statement
  109          | jump_statement

  110 labeled_statement: IDENTIFIER ':' statement
  111                  | CASE logical_or_expression ':' statement

  112 compound_statement: '{' '}'
  113                   | '{' block_item_list '}'

  114 block_item_list: block_item
  115                | block_item_list block_item

  116 block_item: declaration
  117           | statement

  118 expression_statement: ';'
  119                     | expression ';'

  120 selection_statement: IF '(' expression ')' statement
  121                    | IF '(' expression ')' statement ELSE statement
  122                    | SWITCH '(' expression ')' statement

  123 iteration_statement: WHILE '(' expression ')' statement
  124                    | DO statement WHILE '(' expression ')' ';'
  125                    | FOR '(' expression_statement expression_statement ')' statement
  126                    | FOR '(' expression_statement expression_statement expression ')' statement
  127                    | FOR '(' declaration expression_statement ')' statement
  128                    | FOR '(' declaration expression_statement expression ')' statement

  129 jump_statement: GOTO IDENTIFIER ';'
  130               | CONTINUE ';'
  131               | BREAK ';'
  132               | RETURN ';'
  133               | RETURN expression ';'

  134 translation_unit: external_declaration
  135                 | translation_unit external_declaration

  136 external_declaration: function_definition
  137                     | declaration

  138 function_definition: type_specifier declarator declaration_list compound_statement
  139                    | type_specifier declarator compound_statement

  140 declaration_list: declaration
  141                 | declaration_list declaration


Terminals, with rules where they appear

$end (0) 0
'!' (33) 23
'%' (37) 27
'&' (38) 43
'(' (40) 7 10 11 79 83 84 85 120 121 122 123 124 125 126 127 128
')' (41) 7 10 11 79 83 84 85 120 121 122 123 124 125 126 127 128
'*' (42) 25 81
'+' (43) 20 29
',' (44) 15 66 70 87 91 94 97 98
'-' (45) 21 30
'.' (46) 103
'/' (47) 26
':' (58) 110 111
';' (59) 67 68 118 119 124 129 130 131 132 133
'<' (60) 35
'=' (61) 54 72 99
'>' (62) 36
'?' (63)
'[' (91) 9 80 81 82 102
']' (93) 9 80 81 82 102
'^' (94) 45
'{' (123) 93 94 112 113
'|' (124) 47
'}' (125) 93 94 112 113
'~' (126) 22
error (256)
IDENTIFIER (258) 2 78 90 91 103 110 129
CONSTANT (259)
STRING_LITERAL (260)
SIZEOF (261)
CONSTANT_INT (262) 5
CONSTANT_DOUBLE (263) 6
TRUE (264) 3
FALSE (265) 4
CHAR (266) 74
INT (267) 75
DOUBLE (268) 76
VOID (269) 73
BOOL (270) 77
SUB_ASSIGN (271) 59
LEFT_ASSIGN (272) 60
RIGHT_ASSIGN (273) 61
AND_ASSIGN (274) 62
MUL_ASSIGN (275) 55
DIV_ASSIGN (276) 56
MOD_ASSIGN (277) 57
ADD_ASSIGN (278) 58
XOR_ASSIGN (279) 63
OR_ASSIGN (280) 64
TYPE_NAME (281)
CASE (282) 111
IF (283) 120 121
ELSE (284) 121
SWITCH (285) 122
WHILE (286) 123 124
DO (287) 124
FOR (288) 125 126 127 128
GOTO (289) 129
CONTINUE (290) 130
BREAK (291) 131
RETURN (292) 132 133
PTR_OP (293)
INC_OP (294) 12 17
DEC_OP (295) 13 18
LEFT_OP (296) 32
RIGHT_OP (297) 33
LE_OP (298) 37
GE_OP (299) 38
EQ_OP (300) 40
NE_OP (301) 41
AND_OP (302) 49
OR_OP (303) 51
LOWER_THAN_ELSE (304)


Nonterminals, with rules where they appear

$accept (74)
    on left: 0
Program (75)
    on left: 1, on right: 0
primary_expression (76)
    on left: 2 3 4 5 6 7, on right: 8
postfix_expression (77)
    on left: 8 9 10 11 12 13, on right: 9 10 11 12 13 16
argument_expression_list (78)
    on left: 14 15, on right: 11 15
unary_expression (79)
    on left: 16 17 18 19, on right: 17 18 19 24 25 26 27 53
unary_operator (80)
    on left: 20 21 22 23, on right: 19
multiplicative_expression (81)
    on left: 24 25 26 27, on right: 25 26 27 28 29 30
additive_expression (82)
    on left: 28 29 30, on right: 29 30 31 32 33
shift_expression (83)
    on left: 31 32 33, on right: 32 33 34 35 36 37 38
relational_expression (84)
    on left: 34 35 36 37 38, on right: 35 36 37 38 39 40 41
equality_expression (85)
    on left: 39 40 41, on right: 40 41 42 43
and_expression (86)
    on left: 42 43, on right: 43 44 45
exclusive_or_expression (87)
    on left: 44 45, on right: 45 46 47
inclusive_or_expression (88)
    on left: 46 47, on right: 47 48 49
logical_and_expression (89)
    on left: 48 49, on right: 49 50 51
logical_or_expression (90)
    on left: 50 51, on right: 51 52 102 111
assignment_expression (91)
    on left: 52 53, on right: 14 15 53 65 66 80 92
assignment_operator (92)
    on left: 54 55 56 57 58 59 60 61 62 63 64, on right: 53
expression (93)
    on left: 65 66, on right: 7 9 66 119 120 121 122 123 124 126 128
    133
declaration (94)
    on left: 67 68, on right: 116 127 128 137 140 141
init_declarator_list (95)
    on left: 69 70, on right: 68 70
init_declarator (96)
    on left: 71 72, on right: 69 70
type_specifier (97)
    on left: 73 74 75 76 77, on right: 67 68 88 89 138 139
declarator (98)
    on left: 78 79 80 81 82 83 84 85, on right: 71 72 79 80 81 82 83
    84 85 88 138 139
parameter_list (99)
    on left: 86 87, on right: 83 87
parameter_declaration (100)
    on left: 88 89, on right: 86 87
identifier_list (101)
    on left: 90 91, on right: 84 91
initializer (102)
    on left: 92 93 94, on right: 72 95 96 97 98
initializer_list (103)
    on left: 95 96 97 98, on right: 93 94 97 98
designation (104)
    on left: 99, on right: 96 98
designator_list (105)
    on left: 100 101, on right: 99 101
designator (106)
    on left: 102 103, on right: 100 101
statement (107)
    on left: 104 105 106 107 108 109, on right: 110 111 117 120 121
    122 123 124 125 126 127 128
labeled_statement (108)
    on left: 110 111, on right: 104
compound_statement (109)
    on left: 112 113, on right: 105 138 139
block_item_list (110)
    on left: 114 115, on right: 113 115
block_item (111)
    on left: 116 117, on right: 114 115
expression_statement (112)
    on left: 118 119, on right: 106 125 126 127 128
selection_statement (113)
    on left: 120 121 122, on right: 107
iteration_statement (114)
    on left: 123 124 125 126 127 128, on right: 108
jump_statement (115)
    on left: 129 130 131 132 133, on right: 109
translation_unit (116)
    on left: 134 135, on right: 1 135
external_declaration (117)
    on left: 136 137, on right: 134 135
function_definition (118)
    on left: 138 139, on right: 136
declaration_list (119)
    on left: 140 141, on right: 138 141


state 0

    0 $accept: . Program $end

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    VOID    shift, and go to state 4
    BOOL    shift, and go to state 5

    Program               go to state 6
    declaration           go to state 7
    type_specifier        go to state 8
    translation_unit      go to state 9
    external_declaration  go to state 10
    function_definition   go to state 11


state 1

   74 type_specifier: CHAR .

    $default  reduce using rule 74 (type_specifier)


state 2

   75 type_specifier: INT .

    $default  reduce using rule 75 (type_specifier)


state 3

   76 type_specifier: DOUBLE .

    $default  reduce using rule 76 (type_specifier)


state 4

   73 type_specifier: VOID .

    $default  reduce using rule 73 (type_specifier)


state 5

   77 type_specifier: BOOL .

    $default  reduce using rule 77 (type_specifier)


state 6

    0 $accept: Program . $end

    $end  shift, and go to state 12


state 7

  137 external_declaration: declaration .

    $default  reduce using rule 137 (external_declaration)


state 8

   67 declaration: type_specifier . ';'
   68            | type_specifier . init_declarator_list ';'
  138 function_definition: type_specifier . declarator declaration_list compound_statement
  139                    | type_specifier . declarator compound_statement

    IDENTIFIER  shift, and go to state 13
    ';'         shift, and go to state 14
    '('         shift, and go to state 15

    init_declarator_list  go to state 16
    init_declarator       go to state 17
    declarator            go to state 18


state 9

    1 Program: translation_unit .
  135 translation_unit: translation_unit . external_declaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    VOID    shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 1 (Program)

    declaration           go to state 7
    type_specifier        go to state 8
    external_declaration  go to state 19
    function_definition   go to state 11


state 10

  134 translation_unit: external_declaration .

    $default  reduce using rule 134 (translation_unit)


state 11

  136 external_declaration: function_definition .

    $default  reduce using rule 136 (external_declaration)


state 12

    0 $accept: Program $end .

    $default  accept


state 13

   78 declarator: IDENTIFIER .

    $default  reduce using rule 78 (declarator)


state 14

   67 declaration: type_specifier ';' .

    $default  reduce using rule 67 (declaration)


state 15

   79 declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 13
    '('         shift, and go to state 15

    declarator  go to state 20


state 16

   68 declaration: type_specifier init_declarator_list . ';'
   70 init_declarator_list: init_declarator_list . ',' init_declarator

    ';'  shift, and go to state 21
    ','  shift, and go to state 22


state 17

   69 init_declarator_list: init_declarator .

    $default  reduce using rule 69 (init_declarator_list)


state 18

   71 init_declarator: declarator .
   72                | declarator . '=' initializer
   80 declarator: declarator . '[' assignment_expression ']'
   81           | declarator . '[' '*' ']'
   82           | declarator . '[' ']'
   83           | declarator . '(' parameter_list ')'
   84           | declarator . '(' identifier_list ')'
   85           | declarator . '(' ')'
  138 function_definition: type_specifier declarator . declaration_list compound_statement
  139                    | type_specifier declarator . compound_statement

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    VOID    shift, and go to state 4
    BOOL    shift, and go to state 5
    '='     shift, and go to state 23
    '['     shift, and go to state 24
    '{'     shift, and go to state 25
    '('     shift, and go to state 26

    $default  reduce using rule 71 (init_declarator)

    declaration         go to state 27
    type_specifier      go to state 28
    compound_statement  go to state 29
    declaration_list    go to state 30


state 19

  135 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 135 (translation_unit)


state 20

   79 declarator: '(' declarator . ')'
   80           | declarator . '[' assignment_expression ']'
   81           | declarator . '[' '*' ']'
   82           | declarator . '[' ']'
   83           | declarator . '(' parameter_list ')'
   84           | declarator . '(' identifier_list ')'
   85           | declarator . '(' ')'

    '['  shift, and go to state 24
    '('  shift, and go to state 26
    ')'  shift, and go to state 31


state 21

   68 declaration: type_specifier init_declarator_list ';' .

    $default  reduce using rule 68 (declaration)


state 22

   70 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 13
    '('         shift, and go to state 15

    init_declarator  go to state 32
    declarator       go to state 33


state 23

   72 init_declarator: declarator '=' . initializer

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 45
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 61
    initializer                go to state 62


state 24

   80 declarator: declarator '[' . assignment_expression ']'
   81           | declarator '[' . '*' ']'
   82           | declarator '[' . ']'

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ']'              shift, and go to state 63
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '*'              shift, and go to state 64
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 65


state 25

  112 compound_statement: '{' . '}'
  113                   | '{' . block_item_list '}'

    IDENTIFIER       shift, and go to state 66
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    CHAR             shift, and go to state 1
    INT              shift, and go to state 2
    DOUBLE           shift, and go to state 3
    VOID             shift, and go to state 4
    BOOL             shift, and go to state 5
    CASE             shift, and go to state 67
    IF               shift, and go to state 68
    SWITCH           shift, and go to state 69
    WHILE            shift, and go to state 70
    DO               shift, and go to state 71
    FOR              shift, and go to state 72
    GOTO             shift, and go to state 73
    CONTINUE         shift, and go to state 74
    BREAK            shift, and go to state 75
    RETURN           shift, and go to state 76
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ';'              shift, and go to state 77
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 25
    '}'              shift, and go to state 78
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 80
    declaration                go to state 81
    type_specifier             go to state 28
    statement                  go to state 82
    labeled_statement          go to state 83
    compound_statement         go to state 84
    block_item_list            go to state 85
    block_item                 go to state 86
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90


state 26

   83 declarator: declarator '(' . parameter_list ')'
   84           | declarator '(' . identifier_list ')'
   85           | declarator '(' . ')'

    IDENTIFIER  shift, and go to state 91
    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    DOUBLE      shift, and go to state 3
    VOID        shift, and go to state 4
    BOOL        shift, and go to state 5
    ')'         shift, and go to state 92

    type_specifier         go to state 93
    parameter_list         go to state 94
    parameter_declaration  go to state 95
    identifier_list        go to state 96


state 27

  140 declaration_list: declaration .

    $default  reduce using rule 140 (declaration_list)


state 28

   67 declaration: type_specifier . ';'
   68            | type_specifier . init_declarator_list ';'

    IDENTIFIER  shift, and go to state 13
    ';'         shift, and go to state 14
    '('         shift, and go to state 15

    init_declarator_list  go to state 16
    init_declarator       go to state 17
    declarator            go to state 33


state 29

  139 function_definition: type_specifier declarator compound_statement .

    $default  reduce using rule 139 (function_definition)


state 30

  138 function_definition: type_specifier declarator declaration_list . compound_statement
  141 declaration_list: declaration_list . declaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    VOID    shift, and go to state 4
    BOOL    shift, and go to state 5
    '{'     shift, and go to state 25

    declaration         go to state 97
    type_specifier      go to state 28
    compound_statement  go to state 98


state 31

   79 declarator: '(' declarator ')' .

    $default  reduce using rule 79 (declarator)


state 32

   70 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 70 (init_declarator_list)


state 33

   71 init_declarator: declarator .
   72                | declarator . '=' initializer
   80 declarator: declarator . '[' assignment_expression ']'
   81           | declarator . '[' '*' ']'
   82           | declarator . '[' ']'
   83           | declarator . '(' parameter_list ')'
   84           | declarator . '(' identifier_list ')'
   85           | declarator . '(' ')'

    '='  shift, and go to state 23
    '['  shift, and go to state 24
    '('  shift, and go to state 26

    $default  reduce using rule 71 (init_declarator)


state 34

    2 primary_expression: IDENTIFIER .

    $default  reduce using rule 2 (primary_expression)


state 35

    5 primary_expression: CONSTANT_INT .

    $default  reduce using rule 5 (primary_expression)


state 36

    6 primary_expression: CONSTANT_DOUBLE .

    $default  reduce using rule 6 (primary_expression)


state 37

    3 primary_expression: TRUE .

    $default  reduce using rule 3 (primary_expression)


state 38

    4 primary_expression: FALSE .

    $default  reduce using rule 4 (primary_expression)


state 39

   17 unary_expression: INC_OP . unary_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression  go to state 47
    postfix_expression  go to state 48
    unary_expression    go to state 99
    unary_operator      go to state 50


state 40

   18 unary_expression: DEC_OP . unary_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression  go to state 47
    postfix_expression  go to state 48
    unary_expression    go to state 100
    unary_operator      go to state 50


state 41

   23 unary_operator: '!' .

    $default  reduce using rule 23 (unary_operator)


state 42

   22 unary_operator: '~' .

    $default  reduce using rule 22 (unary_operator)


state 43

   21 unary_operator: '-' .

    $default  reduce using rule 21 (unary_operator)


state 44

   20 unary_operator: '+' .

    $default  reduce using rule 20 (unary_operator)


state 45

   93 initializer: '{' . initializer_list '}'
   94            | '{' . initializer_list ',' '}'

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '['              shift, and go to state 101
    '.'              shift, and go to state 102
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 45
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 61
    initializer                go to state 103
    initializer_list           go to state 104
    designation                go to state 105
    designator_list            go to state 106
    designator                 go to state 107


state 46

    7 primary_expression: '(' . expression ')'

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 108


state 47

    8 postfix_expression: primary_expression .

    $default  reduce using rule 8 (postfix_expression)


state 48

    9 postfix_expression: postfix_expression . '[' expression ']'
   10                   | postfix_expression . '(' ')'
   11                   | postfix_expression . '(' argument_expression_list ')'
   12                   | postfix_expression . INC_OP
   13                   | postfix_expression . DEC_OP
   16 unary_expression: postfix_expression .

    INC_OP  shift, and go to state 109
    DEC_OP  shift, and go to state 110
    '['     shift, and go to state 111
    '('     shift, and go to state 112

    $default  reduce using rule 16 (unary_expression)


state 49

   24 multiplicative_expression: unary_expression .
   53 assignment_expression: unary_expression . assignment_operator assignment_expression

    SUB_ASSIGN    shift, and go to state 113
    LEFT_ASSIGN   shift, and go to state 114
    RIGHT_ASSIGN  shift, and go to state 115
    AND_ASSIGN    shift, and go to state 116
    MUL_ASSIGN    shift, and go to state 117
    DIV_ASSIGN    shift, and go to state 118
    MOD_ASSIGN    shift, and go to state 119
    ADD_ASSIGN    shift, and go to state 120
    XOR_ASSIGN    shift, and go to state 121
    OR_ASSIGN     shift, and go to state 122
    '='           shift, and go to state 123

    $default  reduce using rule 24 (multiplicative_expression)

    assignment_operator  go to state 124


state 50

   19 unary_expression: unary_operator . unary_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression  go to state 47
    postfix_expression  go to state 48
    unary_expression    go to state 125
    unary_operator      go to state 50


state 51

   25 multiplicative_expression: multiplicative_expression . '*' unary_expression
   26                          | multiplicative_expression . '/' unary_expression
   27                          | multiplicative_expression . '%' unary_expression
   28 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 126
    '/'  shift, and go to state 127
    '%'  shift, and go to state 128

    $default  reduce using rule 28 (additive_expression)


state 52

   29 additive_expression: additive_expression . '+' multiplicative_expression
   30                    | additive_expression . '-' multiplicative_expression
   31 shift_expression: additive_expression .

    '-'  shift, and go to state 129
    '+'  shift, and go to state 130

    $default  reduce using rule 31 (shift_expression)


state 53

   32 shift_expression: shift_expression . LEFT_OP additive_expression
   33                 | shift_expression . RIGHT_OP additive_expression
   34 relational_expression: shift_expression .

    LEFT_OP   shift, and go to state 131
    RIGHT_OP  shift, and go to state 132

    $default  reduce using rule 34 (relational_expression)


state 54

   35 relational_expression: relational_expression . '<' shift_expression
   36                      | relational_expression . '>' shift_expression
   37                      | relational_expression . LE_OP shift_expression
   38                      | relational_expression . GE_OP shift_expression
   39 equality_expression: relational_expression .

    LE_OP  shift, and go to state 133
    GE_OP  shift, and go to state 134
    '<'    shift, and go to state 135
    '>'    shift, and go to state 136

    $default  reduce using rule 39 (equality_expression)


state 55

   40 equality_expression: equality_expression . EQ_OP relational_expression
   41                    | equality_expression . NE_OP relational_expression
   42 and_expression: equality_expression .

    EQ_OP  shift, and go to state 137
    NE_OP  shift, and go to state 138

    $default  reduce using rule 42 (and_expression)


state 56

   43 and_expression: and_expression . '&' equality_expression
   44 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 139

    $default  reduce using rule 44 (exclusive_or_expression)


state 57

   45 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   46 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 140

    $default  reduce using rule 46 (inclusive_or_expression)


state 58

   47 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   48 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 141

    $default  reduce using rule 48 (logical_and_expression)


state 59

   49 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
   50 logical_or_expression: logical_and_expression .

    AND_OP  shift, and go to state 142

    $default  reduce using rule 50 (logical_or_expression)


state 60

   51 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   52 assignment_expression: logical_or_expression .

    OR_OP  shift, and go to state 143

    $default  reduce using rule 52 (assignment_expression)


state 61

   92 initializer: assignment_expression .

    $default  reduce using rule 92 (initializer)


state 62

   72 init_declarator: declarator '=' initializer .

    $default  reduce using rule 72 (init_declarator)


state 63

   82 declarator: declarator '[' ']' .

    $default  reduce using rule 82 (declarator)


state 64

   81 declarator: declarator '[' '*' . ']'

    ']'  shift, and go to state 144


state 65

   80 declarator: declarator '[' assignment_expression . ']'

    ']'  shift, and go to state 145


state 66

    2 primary_expression: IDENTIFIER .
  110 labeled_statement: IDENTIFIER . ':' statement

    ':'  shift, and go to state 146

    $default  reduce using rule 2 (primary_expression)


state 67

  111 labeled_statement: CASE . logical_or_expression ':' statement

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 147
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 148


state 68

  120 selection_statement: IF . '(' expression ')' statement
  121                    | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 149


state 69

  122 selection_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 150


state 70

  123 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 151


state 71

  124 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER       shift, and go to state 66
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    CASE             shift, and go to state 67
    IF               shift, and go to state 68
    SWITCH           shift, and go to state 69
    WHILE            shift, and go to state 70
    DO               shift, and go to state 71
    FOR              shift, and go to state 72
    GOTO             shift, and go to state 73
    CONTINUE         shift, and go to state 74
    BREAK            shift, and go to state 75
    RETURN           shift, and go to state 76
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ';'              shift, and go to state 77
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 25
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 80
    statement                  go to state 152
    labeled_statement          go to state 83
    compound_statement         go to state 84
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90


state 72

  125 iteration_statement: FOR . '(' expression_statement expression_statement ')' statement
  126                    | FOR . '(' expression_statement expression_statement expression ')' statement
  127                    | FOR . '(' declaration expression_statement ')' statement
  128                    | FOR . '(' declaration expression_statement expression ')' statement

    '('  shift, and go to state 153


state 73

  129 jump_statement: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 154


state 74

  130 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 155


state 75

  131 jump_statement: BREAK . ';'

    ';'  shift, and go to state 156


state 76

  132 jump_statement: RETURN . ';'
  133               | RETURN . expression ';'

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ';'              shift, and go to state 157
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 158


state 77

  118 expression_statement: ';' .

    $default  reduce using rule 118 (expression_statement)


state 78

  112 compound_statement: '{' '}' .

    $default  reduce using rule 112 (compound_statement)


state 79

   65 expression: assignment_expression .

    $default  reduce using rule 65 (expression)


state 80

   66 expression: expression . ',' assignment_expression
  119 expression_statement: expression . ';'

    ';'  shift, and go to state 159
    ','  shift, and go to state 160


state 81

  116 block_item: declaration .

    $default  reduce using rule 116 (block_item)


state 82

  117 block_item: statement .

    $default  reduce using rule 117 (block_item)


state 83

  104 statement: labeled_statement .

    $default  reduce using rule 104 (statement)


state 84

  105 statement: compound_statement .

    $default  reduce using rule 105 (statement)


state 85

  113 compound_statement: '{' block_item_list . '}'
  115 block_item_list: block_item_list . block_item

    IDENTIFIER       shift, and go to state 66
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    CHAR             shift, and go to state 1
    INT              shift, and go to state 2
    DOUBLE           shift, and go to state 3
    VOID             shift, and go to state 4
    BOOL             shift, and go to state 5
    CASE             shift, and go to state 67
    IF               shift, and go to state 68
    SWITCH           shift, and go to state 69
    WHILE            shift, and go to state 70
    DO               shift, and go to state 71
    FOR              shift, and go to state 72
    GOTO             shift, and go to state 73
    CONTINUE         shift, and go to state 74
    BREAK            shift, and go to state 75
    RETURN           shift, and go to state 76
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ';'              shift, and go to state 77
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 25
    '}'              shift, and go to state 161
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 80
    declaration                go to state 81
    type_specifier             go to state 28
    statement                  go to state 82
    labeled_statement          go to state 83
    compound_statement         go to state 84
    block_item                 go to state 162
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90


state 86

  114 block_item_list: block_item .

    $default  reduce using rule 114 (block_item_list)


state 87

  106 statement: expression_statement .

    $default  reduce using rule 106 (statement)


state 88

  107 statement: selection_statement .

    $default  reduce using rule 107 (statement)


state 89

  108 statement: iteration_statement .

    $default  reduce using rule 108 (statement)


state 90

  109 statement: jump_statement .

    $default  reduce using rule 109 (statement)


state 91

   90 identifier_list: IDENTIFIER .

    $default  reduce using rule 90 (identifier_list)


state 92

   85 declarator: declarator '(' ')' .

    $default  reduce using rule 85 (declarator)


state 93

   88 parameter_declaration: type_specifier . declarator
   89                      | type_specifier .

    IDENTIFIER  shift, and go to state 13
    '('         shift, and go to state 15

    $default  reduce using rule 89 (parameter_declaration)

    declarator  go to state 163


state 94

   83 declarator: declarator '(' parameter_list . ')'
   87 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 164
    ')'  shift, and go to state 165


state 95

   86 parameter_list: parameter_declaration .

    $default  reduce using rule 86 (parameter_list)


state 96

   84 declarator: declarator '(' identifier_list . ')'
   91 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 166
    ')'  shift, and go to state 167


state 97

  141 declaration_list: declaration_list declaration .

    $default  reduce using rule 141 (declaration_list)


state 98

  138 function_definition: type_specifier declarator declaration_list compound_statement .

    $default  reduce using rule 138 (function_definition)


state 99

   17 unary_expression: INC_OP unary_expression .

    $default  reduce using rule 17 (unary_expression)


state 100

   18 unary_expression: DEC_OP unary_expression .

    $default  reduce using rule 18 (unary_expression)


state 101

  102 designator: '[' . logical_or_expression ']'

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 147
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 168


state 102

  103 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 169


state 103

   95 initializer_list: initializer .

    $default  reduce using rule 95 (initializer_list)


state 104

   93 initializer: '{' initializer_list . '}'
   94            | '{' initializer_list . ',' '}'
   97 initializer_list: initializer_list . ',' initializer
   98                 | initializer_list . ',' designation initializer

    ','  shift, and go to state 170
    '}'  shift, and go to state 171


state 105

   96 initializer_list: designation . initializer

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 45
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 61
    initializer                go to state 172


state 106

   99 designation: designator_list . '='
  101 designator_list: designator_list . designator

    '='  shift, and go to state 173
    '['  shift, and go to state 101
    '.'  shift, and go to state 102

    designator  go to state 174


state 107

  100 designator_list: designator .

    $default  reduce using rule 100 (designator_list)


state 108

    7 primary_expression: '(' expression . ')'
   66 expression: expression . ',' assignment_expression

    ','  shift, and go to state 160
    ')'  shift, and go to state 175


state 109

   12 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 12 (postfix_expression)


state 110

   13 postfix_expression: postfix_expression DEC_OP .

    $default  reduce using rule 13 (postfix_expression)


state 111

    9 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 176


state 112

   10 postfix_expression: postfix_expression '(' . ')'
   11                   | postfix_expression '(' . argument_expression_list ')'

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46
    ')'              shift, and go to state 177

    primary_expression         go to state 47
    postfix_expression         go to state 48
    argument_expression_list   go to state 178
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 179


state 113

   59 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 59 (assignment_operator)


state 114

   60 assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 60 (assignment_operator)


state 115

   61 assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 61 (assignment_operator)


state 116

   62 assignment_operator: AND_ASSIGN .

    $default  reduce using rule 62 (assignment_operator)


state 117

   55 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 55 (assignment_operator)


state 118

   56 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 56 (assignment_operator)


state 119

   57 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 57 (assignment_operator)


state 120

   58 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 58 (assignment_operator)


state 121

   63 assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 63 (assignment_operator)


state 122

   64 assignment_operator: OR_ASSIGN .

    $default  reduce using rule 64 (assignment_operator)


state 123

   54 assignment_operator: '=' .

    $default  reduce using rule 54 (assignment_operator)


state 124

   53 assignment_expression: unary_expression assignment_operator . assignment_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 180


state 125

   19 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 19 (unary_expression)


state 126

   25 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression  go to state 47
    postfix_expression  go to state 48
    unary_expression    go to state 181
    unary_operator      go to state 50


state 127

   26 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression  go to state 47
    postfix_expression  go to state 48
    unary_expression    go to state 182
    unary_operator      go to state 50


state 128

   27 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression  go to state 47
    postfix_expression  go to state 48
    unary_expression    go to state 183
    unary_operator      go to state 50


state 129

   30 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 147
    unary_operator             go to state 50
    multiplicative_expression  go to state 184


state 130

   29 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 147
    unary_operator             go to state 50
    multiplicative_expression  go to state 185


state 131

   32 shift_expression: shift_expression LEFT_OP . additive_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 147
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 186


state 132

   33 shift_expression: shift_expression RIGHT_OP . additive_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 147
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 187


state 133

   37 relational_expression: relational_expression LE_OP . shift_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 147
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 188


state 134

   38 relational_expression: relational_expression GE_OP . shift_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 147
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 189


state 135

   35 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 147
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 190


state 136

   36 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 147
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 191


state 137

   40 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 147
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 192


state 138

   41 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 147
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 193


state 139

   43 and_expression: and_expression '&' . equality_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 147
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 194


state 140

   45 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 147
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 195


state 141

   47 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 147
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 196


state 142

   49 logical_and_expression: logical_and_expression AND_OP . inclusive_or_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 147
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 197


state 143

   51 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 147
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 198


state 144

   81 declarator: declarator '[' '*' ']' .

    $default  reduce using rule 81 (declarator)


state 145

   80 declarator: declarator '[' assignment_expression ']' .

    $default  reduce using rule 80 (declarator)


state 146

  110 labeled_statement: IDENTIFIER ':' . statement

    IDENTIFIER       shift, and go to state 66
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    CASE             shift, and go to state 67
    IF               shift, and go to state 68
    SWITCH           shift, and go to state 69
    WHILE            shift, and go to state 70
    DO               shift, and go to state 71
    FOR              shift, and go to state 72
    GOTO             shift, and go to state 73
    CONTINUE         shift, and go to state 74
    BREAK            shift, and go to state 75
    RETURN           shift, and go to state 76
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ';'              shift, and go to state 77
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 25
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 80
    statement                  go to state 199
    labeled_statement          go to state 83
    compound_statement         go to state 84
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90


state 147

   24 multiplicative_expression: unary_expression .

    $default  reduce using rule 24 (multiplicative_expression)


state 148

   51 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
  111 labeled_statement: CASE logical_or_expression . ':' statement

    OR_OP  shift, and go to state 143
    ':'    shift, and go to state 200


state 149

  120 selection_statement: IF '(' . expression ')' statement
  121                    | IF '(' . expression ')' statement ELSE statement

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 201


state 150

  122 selection_statement: SWITCH '(' . expression ')' statement

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 202


state 151

  123 iteration_statement: WHILE '(' . expression ')' statement

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 203


state 152

  124 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 204


state 153

  125 iteration_statement: FOR '(' . expression_statement expression_statement ')' statement
  126                    | FOR '(' . expression_statement expression_statement expression ')' statement
  127                    | FOR '(' . declaration expression_statement ')' statement
  128                    | FOR '(' . declaration expression_statement expression ')' statement

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    CHAR             shift, and go to state 1
    INT              shift, and go to state 2
    DOUBLE           shift, and go to state 3
    VOID             shift, and go to state 4
    BOOL             shift, and go to state 5
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ';'              shift, and go to state 77
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 80
    declaration                go to state 205
    type_specifier             go to state 28
    expression_statement       go to state 206


state 154

  129 jump_statement: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 207


state 155

  130 jump_statement: CONTINUE ';' .

    $default  reduce using rule 130 (jump_statement)


state 156

  131 jump_statement: BREAK ';' .

    $default  reduce using rule 131 (jump_statement)


state 157

  132 jump_statement: RETURN ';' .

    $default  reduce using rule 132 (jump_statement)


state 158

   66 expression: expression . ',' assignment_expression
  133 jump_statement: RETURN expression . ';'

    ';'  shift, and go to state 208
    ','  shift, and go to state 160


state 159

  119 expression_statement: expression ';' .

    $default  reduce using rule 119 (expression_statement)


state 160

   66 expression: expression ',' . assignment_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 209


state 161

  113 compound_statement: '{' block_item_list '}' .

    $default  reduce using rule 113 (compound_statement)


state 162

  115 block_item_list: block_item_list block_item .

    $default  reduce using rule 115 (block_item_list)


state 163

   80 declarator: declarator . '[' assignment_expression ']'
   81           | declarator . '[' '*' ']'
   82           | declarator . '[' ']'
   83           | declarator . '(' parameter_list ')'
   84           | declarator . '(' identifier_list ')'
   85           | declarator . '(' ')'
   88 parameter_declaration: type_specifier declarator .

    '['  shift, and go to state 24
    '('  shift, and go to state 26

    $default  reduce using rule 88 (parameter_declaration)


state 164

   87 parameter_list: parameter_list ',' . parameter_declaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    VOID    shift, and go to state 4
    BOOL    shift, and go to state 5

    type_specifier         go to state 93
    parameter_declaration  go to state 210


state 165

   83 declarator: declarator '(' parameter_list ')' .

    $default  reduce using rule 83 (declarator)


state 166

   91 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 211


state 167

   84 declarator: declarator '(' identifier_list ')' .

    $default  reduce using rule 84 (declarator)


state 168

   51 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
  102 designator: '[' logical_or_expression . ']'

    OR_OP  shift, and go to state 143
    ']'    shift, and go to state 212


state 169

  103 designator: '.' IDENTIFIER .

    $default  reduce using rule 103 (designator)


state 170

   94 initializer: '{' initializer_list ',' . '}'
   97 initializer_list: initializer_list ',' . initializer
   98                 | initializer_list ',' . designation initializer

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '['              shift, and go to state 101
    '.'              shift, and go to state 102
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 45
    '}'              shift, and go to state 213
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 61
    initializer                go to state 214
    designation                go to state 215
    designator_list            go to state 106
    designator                 go to state 107


state 171

   93 initializer: '{' initializer_list '}' .

    $default  reduce using rule 93 (initializer)


state 172

   96 initializer_list: designation initializer .

    $default  reduce using rule 96 (initializer_list)


state 173

   99 designation: designator_list '=' .

    $default  reduce using rule 99 (designation)


state 174

  101 designator_list: designator_list designator .

    $default  reduce using rule 101 (designator_list)


state 175

    7 primary_expression: '(' expression ')' .

    $default  reduce using rule 7 (primary_expression)


state 176

    9 postfix_expression: postfix_expression '[' expression . ']'
   66 expression: expression . ',' assignment_expression

    ','  shift, and go to state 160
    ']'  shift, and go to state 216


state 177

   10 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 10 (postfix_expression)


state 178

   11 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   15 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  shift, and go to state 217
    ')'  shift, and go to state 218


state 179

   14 argument_expression_list: assignment_expression .

    $default  reduce using rule 14 (argument_expression_list)


state 180

   53 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 53 (assignment_expression)


state 181

   25 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 25 (multiplicative_expression)


state 182

   26 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 26 (multiplicative_expression)


state 183

   27 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 27 (multiplicative_expression)


state 184

   25 multiplicative_expression: multiplicative_expression . '*' unary_expression
   26                          | multiplicative_expression . '/' unary_expression
   27                          | multiplicative_expression . '%' unary_expression
   30 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 126
    '/'  shift, and go to state 127
    '%'  shift, and go to state 128

    $default  reduce using rule 30 (additive_expression)


state 185

   25 multiplicative_expression: multiplicative_expression . '*' unary_expression
   26                          | multiplicative_expression . '/' unary_expression
   27                          | multiplicative_expression . '%' unary_expression
   29 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 126
    '/'  shift, and go to state 127
    '%'  shift, and go to state 128

    $default  reduce using rule 29 (additive_expression)


state 186

   29 additive_expression: additive_expression . '+' multiplicative_expression
   30                    | additive_expression . '-' multiplicative_expression
   32 shift_expression: shift_expression LEFT_OP additive_expression .

    '-'  shift, and go to state 129
    '+'  shift, and go to state 130

    $default  reduce using rule 32 (shift_expression)


state 187

   29 additive_expression: additive_expression . '+' multiplicative_expression
   30                    | additive_expression . '-' multiplicative_expression
   33 shift_expression: shift_expression RIGHT_OP additive_expression .

    '-'  shift, and go to state 129
    '+'  shift, and go to state 130

    $default  reduce using rule 33 (shift_expression)


state 188

   32 shift_expression: shift_expression . LEFT_OP additive_expression
   33                 | shift_expression . RIGHT_OP additive_expression
   37 relational_expression: relational_expression LE_OP shift_expression .

    LEFT_OP   shift, and go to state 131
    RIGHT_OP  shift, and go to state 132

    $default  reduce using rule 37 (relational_expression)


state 189

   32 shift_expression: shift_expression . LEFT_OP additive_expression
   33                 | shift_expression . RIGHT_OP additive_expression
   38 relational_expression: relational_expression GE_OP shift_expression .

    LEFT_OP   shift, and go to state 131
    RIGHT_OP  shift, and go to state 132

    $default  reduce using rule 38 (relational_expression)


state 190

   32 shift_expression: shift_expression . LEFT_OP additive_expression
   33                 | shift_expression . RIGHT_OP additive_expression
   35 relational_expression: relational_expression '<' shift_expression .

    LEFT_OP   shift, and go to state 131
    RIGHT_OP  shift, and go to state 132

    $default  reduce using rule 35 (relational_expression)


state 191

   32 shift_expression: shift_expression . LEFT_OP additive_expression
   33                 | shift_expression . RIGHT_OP additive_expression
   36 relational_expression: relational_expression '>' shift_expression .

    LEFT_OP   shift, and go to state 131
    RIGHT_OP  shift, and go to state 132

    $default  reduce using rule 36 (relational_expression)


state 192

   35 relational_expression: relational_expression . '<' shift_expression
   36                      | relational_expression . '>' shift_expression
   37                      | relational_expression . LE_OP shift_expression
   38                      | relational_expression . GE_OP shift_expression
   40 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 133
    GE_OP  shift, and go to state 134
    '<'    shift, and go to state 135
    '>'    shift, and go to state 136

    $default  reduce using rule 40 (equality_expression)


state 193

   35 relational_expression: relational_expression . '<' shift_expression
   36                      | relational_expression . '>' shift_expression
   37                      | relational_expression . LE_OP shift_expression
   38                      | relational_expression . GE_OP shift_expression
   41 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 133
    GE_OP  shift, and go to state 134
    '<'    shift, and go to state 135
    '>'    shift, and go to state 136

    $default  reduce using rule 41 (equality_expression)


state 194

   40 equality_expression: equality_expression . EQ_OP relational_expression
   41                    | equality_expression . NE_OP relational_expression
   43 and_expression: and_expression '&' equality_expression .

    EQ_OP  shift, and go to state 137
    NE_OP  shift, and go to state 138

    $default  reduce using rule 43 (and_expression)


state 195

   43 and_expression: and_expression . '&' equality_expression
   45 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 139

    $default  reduce using rule 45 (exclusive_or_expression)


state 196

   45 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   47 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 140

    $default  reduce using rule 47 (inclusive_or_expression)


state 197

   47 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   49 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression .

    '|'  shift, and go to state 141

    $default  reduce using rule 49 (logical_and_expression)


state 198

   49 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
   51 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  shift, and go to state 142

    $default  reduce using rule 51 (logical_or_expression)


state 199

  110 labeled_statement: IDENTIFIER ':' statement .

    $default  reduce using rule 110 (labeled_statement)


state 200

  111 labeled_statement: CASE logical_or_expression ':' . statement

    IDENTIFIER       shift, and go to state 66
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    CASE             shift, and go to state 67
    IF               shift, and go to state 68
    SWITCH           shift, and go to state 69
    WHILE            shift, and go to state 70
    DO               shift, and go to state 71
    FOR              shift, and go to state 72
    GOTO             shift, and go to state 73
    CONTINUE         shift, and go to state 74
    BREAK            shift, and go to state 75
    RETURN           shift, and go to state 76
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ';'              shift, and go to state 77
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 25
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 80
    statement                  go to state 219
    labeled_statement          go to state 83
    compound_statement         go to state 84
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90


state 201

   66 expression: expression . ',' assignment_expression
  120 selection_statement: IF '(' expression . ')' statement
  121                    | IF '(' expression . ')' statement ELSE statement

    ','  shift, and go to state 160
    ')'  shift, and go to state 220


state 202

   66 expression: expression . ',' assignment_expression
  122 selection_statement: SWITCH '(' expression . ')' statement

    ','  shift, and go to state 160
    ')'  shift, and go to state 221


state 203

   66 expression: expression . ',' assignment_expression
  123 iteration_statement: WHILE '(' expression . ')' statement

    ','  shift, and go to state 160
    ')'  shift, and go to state 222


state 204

  124 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 223


state 205

  127 iteration_statement: FOR '(' declaration . expression_statement ')' statement
  128                    | FOR '(' declaration . expression_statement expression ')' statement

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ';'              shift, and go to state 77
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 80
    expression_statement       go to state 224


state 206

  125 iteration_statement: FOR '(' expression_statement . expression_statement ')' statement
  126                    | FOR '(' expression_statement . expression_statement expression ')' statement

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ';'              shift, and go to state 77
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 80
    expression_statement       go to state 225


state 207

  129 jump_statement: GOTO IDENTIFIER ';' .

    $default  reduce using rule 129 (jump_statement)


state 208

  133 jump_statement: RETURN expression ';' .

    $default  reduce using rule 133 (jump_statement)


state 209

   66 expression: expression ',' assignment_expression .

    $default  reduce using rule 66 (expression)


state 210

   87 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 87 (parameter_list)


state 211

   91 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 91 (identifier_list)


state 212

  102 designator: '[' logical_or_expression ']' .

    $default  reduce using rule 102 (designator)


state 213

   94 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 94 (initializer)


state 214

   97 initializer_list: initializer_list ',' initializer .

    $default  reduce using rule 97 (initializer_list)


state 215

   98 initializer_list: initializer_list ',' designation . initializer

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 45
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 61
    initializer                go to state 226


state 216

    9 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 9 (postfix_expression)


state 217

   15 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 227


state 218

   11 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 11 (postfix_expression)


state 219

  111 labeled_statement: CASE logical_or_expression ':' statement .

    $default  reduce using rule 111 (labeled_statement)


state 220

  120 selection_statement: IF '(' expression ')' . statement
  121                    | IF '(' expression ')' . statement ELSE statement

    IDENTIFIER       shift, and go to state 66
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    CASE             shift, and go to state 67
    IF               shift, and go to state 68
    SWITCH           shift, and go to state 69
    WHILE            shift, and go to state 70
    DO               shift, and go to state 71
    FOR              shift, and go to state 72
    GOTO             shift, and go to state 73
    CONTINUE         shift, and go to state 74
    BREAK            shift, and go to state 75
    RETURN           shift, and go to state 76
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ';'              shift, and go to state 77
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 25
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 80
    statement                  go to state 228
    labeled_statement          go to state 83
    compound_statement         go to state 84
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90


state 221

  122 selection_statement: SWITCH '(' expression ')' . statement

    IDENTIFIER       shift, and go to state 66
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    CASE             shift, and go to state 67
    IF               shift, and go to state 68
    SWITCH           shift, and go to state 69
    WHILE            shift, and go to state 70
    DO               shift, and go to state 71
    FOR              shift, and go to state 72
    GOTO             shift, and go to state 73
    CONTINUE         shift, and go to state 74
    BREAK            shift, and go to state 75
    RETURN           shift, and go to state 76
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ';'              shift, and go to state 77
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 25
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 80
    statement                  go to state 229
    labeled_statement          go to state 83
    compound_statement         go to state 84
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90


state 222

  123 iteration_statement: WHILE '(' expression ')' . statement

    IDENTIFIER       shift, and go to state 66
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    CASE             shift, and go to state 67
    IF               shift, and go to state 68
    SWITCH           shift, and go to state 69
    WHILE            shift, and go to state 70
    DO               shift, and go to state 71
    FOR              shift, and go to state 72
    GOTO             shift, and go to state 73
    CONTINUE         shift, and go to state 74
    BREAK            shift, and go to state 75
    RETURN           shift, and go to state 76
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ';'              shift, and go to state 77
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 25
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 80
    statement                  go to state 230
    labeled_statement          go to state 83
    compound_statement         go to state 84
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90


state 223

  124 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 231


state 224

  127 iteration_statement: FOR '(' declaration expression_statement . ')' statement
  128                    | FOR '(' declaration expression_statement . expression ')' statement

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46
    ')'              shift, and go to state 232

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 233


state 225

  125 iteration_statement: FOR '(' expression_statement expression_statement . ')' statement
  126                    | FOR '(' expression_statement expression_statement . expression ')' statement

    IDENTIFIER       shift, and go to state 34
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '('              shift, and go to state 46
    ')'              shift, and go to state 234

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 235


state 226

   98 initializer_list: initializer_list ',' designation initializer .

    $default  reduce using rule 98 (initializer_list)


state 227

   15 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 15 (argument_expression_list)


state 228

  120 selection_statement: IF '(' expression ')' statement .
  121                    | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 236

    $default  reduce using rule 120 (selection_statement)


state 229

  122 selection_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 122 (selection_statement)


state 230

  123 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 123 (iteration_statement)


state 231

   66 expression: expression . ',' assignment_expression
  124 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ','  shift, and go to state 160
    ')'  shift, and go to state 237


state 232

  127 iteration_statement: FOR '(' declaration expression_statement ')' . statement

    IDENTIFIER       shift, and go to state 66
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    CASE             shift, and go to state 67
    IF               shift, and go to state 68
    SWITCH           shift, and go to state 69
    WHILE            shift, and go to state 70
    DO               shift, and go to state 71
    FOR              shift, and go to state 72
    GOTO             shift, and go to state 73
    CONTINUE         shift, and go to state 74
    BREAK            shift, and go to state 75
    RETURN           shift, and go to state 76
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ';'              shift, and go to state 77
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 25
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 80
    statement                  go to state 238
    labeled_statement          go to state 83
    compound_statement         go to state 84
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90


state 233

   66 expression: expression . ',' assignment_expression
  128 iteration_statement: FOR '(' declaration expression_statement expression . ')' statement

    ','  shift, and go to state 160
    ')'  shift, and go to state 239


state 234

  125 iteration_statement: FOR '(' expression_statement expression_statement ')' . statement

    IDENTIFIER       shift, and go to state 66
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    CASE             shift, and go to state 67
    IF               shift, and go to state 68
    SWITCH           shift, and go to state 69
    WHILE            shift, and go to state 70
    DO               shift, and go to state 71
    FOR              shift, and go to state 72
    GOTO             shift, and go to state 73
    CONTINUE         shift, and go to state 74
    BREAK            shift, and go to state 75
    RETURN           shift, and go to state 76
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ';'              shift, and go to state 77
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 25
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 80
    statement                  go to state 240
    labeled_statement          go to state 83
    compound_statement         go to state 84
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90


state 235

   66 expression: expression . ',' assignment_expression
  126 iteration_statement: FOR '(' expression_statement expression_statement expression . ')' statement

    ','  shift, and go to state 160
    ')'  shift, and go to state 241


state 236

  121 selection_statement: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER       shift, and go to state 66
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    CASE             shift, and go to state 67
    IF               shift, and go to state 68
    SWITCH           shift, and go to state 69
    WHILE            shift, and go to state 70
    DO               shift, and go to state 71
    FOR              shift, and go to state 72
    GOTO             shift, and go to state 73
    CONTINUE         shift, and go to state 74
    BREAK            shift, and go to state 75
    RETURN           shift, and go to state 76
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ';'              shift, and go to state 77
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 25
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 80
    statement                  go to state 242
    labeled_statement          go to state 83
    compound_statement         go to state 84
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90


state 237

  124 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 243


state 238

  127 iteration_statement: FOR '(' declaration expression_statement ')' statement .

    $default  reduce using rule 127 (iteration_statement)


state 239

  128 iteration_statement: FOR '(' declaration expression_statement expression ')' . statement

    IDENTIFIER       shift, and go to state 66
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    CASE             shift, and go to state 67
    IF               shift, and go to state 68
    SWITCH           shift, and go to state 69
    WHILE            shift, and go to state 70
    DO               shift, and go to state 71
    FOR              shift, and go to state 72
    GOTO             shift, and go to state 73
    CONTINUE         shift, and go to state 74
    BREAK            shift, and go to state 75
    RETURN           shift, and go to state 76
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ';'              shift, and go to state 77
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 25
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 80
    statement                  go to state 244
    labeled_statement          go to state 83
    compound_statement         go to state 84
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90


state 240

  125 iteration_statement: FOR '(' expression_statement expression_statement ')' statement .

    $default  reduce using rule 125 (iteration_statement)


state 241

  126 iteration_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    IDENTIFIER       shift, and go to state 66
    CONSTANT_INT     shift, and go to state 35
    CONSTANT_DOUBLE  shift, and go to state 36
    TRUE             shift, and go to state 37
    FALSE            shift, and go to state 38
    CASE             shift, and go to state 67
    IF               shift, and go to state 68
    SWITCH           shift, and go to state 69
    WHILE            shift, and go to state 70
    DO               shift, and go to state 71
    FOR              shift, and go to state 72
    GOTO             shift, and go to state 73
    CONTINUE         shift, and go to state 74
    BREAK            shift, and go to state 75
    RETURN           shift, and go to state 76
    INC_OP           shift, and go to state 39
    DEC_OP           shift, and go to state 40
    ';'              shift, and go to state 77
    '!'              shift, and go to state 41
    '~'              shift, and go to state 42
    '-'              shift, and go to state 43
    '+'              shift, and go to state 44
    '{'              shift, and go to state 25
    '('              shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    multiplicative_expression  go to state 51
    additive_expression        go to state 52
    shift_expression           go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    and_expression             go to state 56
    exclusive_or_expression    go to state 57
    inclusive_or_expression    go to state 58
    logical_and_expression     go to state 59
    logical_or_expression      go to state 60
    assignment_expression      go to state 79
    expression                 go to state 80
    statement                  go to state 245
    labeled_statement          go to state 83
    compound_statement         go to state 84
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90


state 242

  121 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 121 (selection_statement)


state 243

  124 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 124 (iteration_statement)


state 244

  128 iteration_statement: FOR '(' declaration expression_statement expression ')' statement .

    $default  reduce using rule 128 (iteration_statement)


state 245

  126 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $default  reduce using rule 126 (iteration_statement)
